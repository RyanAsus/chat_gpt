{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import gptLogo from'./assets/chatgpt.svg';import addBtn from'./assets/add-30.png';import msgIcon from'./assets/message.svg';import home from'./assets/home.svg';import saved from'./assets/bookmark.svg';import rocket from'./assets/rocket.svg';import sendBtn from'./assets/send.svg';import userIcon from'./assets/user-icon.png';import gptImgLogo from'./assets/chatgptLogo.svg';import{sendMsgToOpenAI}from'./openai';import{useEffect,useRef,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var msgEnd=useRef(null);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([{text:\"This is just clone of the chatGPT using react html css and OpenAPI\",isBot:true}]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];useEffect(function(){msgEnd.current.scrollIntoView();},[messages]);var handleSend=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var text,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:text=input;setInput('');setMessages([].concat(_toConsumableArray(messages),[{text:text,isBot:false}]));_context.next=5;return sendMsgToOpenAI(text);case 5:res=_context.sent;setMessages([].concat(_toConsumableArray(messages),[{text:text,isBot:false},{text:res,isBot:true}]));case 7:case\"end\":return _context.stop();}},_callee);}));return function handleSend(){return _ref.apply(this,arguments);};}();var handleEnter=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!(e.key==='Enter')){_context2.next=3;break;}_context2.next=3;return handleSend();case 3:case\"end\":return _context2.stop();}},_callee2);}));return function handleEnter(_x){return _ref2.apply(this,arguments);};}();var handleQuery=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e){var text,res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:text=e.target.value;setInput('');setMessages([].concat(_toConsumableArray(messages),[{text:text,isBot:false}]));_context3.next=5;return sendMsgToOpenAI(text);case 5:res=_context3.sent;setMessages([].concat(_toConsumableArray(messages),[{text:text,isBot:false},{text:res,isBot:true}]));case 7:case\"end\":return _context3.stop();}},_callee3);}));return function handleQuery(_x2){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sideBar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upperSide\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upperSideTop\",children:[/*#__PURE__*/_jsx(\"img\",{src:gptLogo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(\"span\",{className:\"brand\",children:\"ChatGPT\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"midBtn\",onClick:function onClick(){window.location.reload();},children:[/*#__PURE__*/_jsx(\"img\",{src:addBtn,alt:\"new chat\",className:\"addBtn\"}),\"New Chat\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"upperSideBottom\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"query\",onClick:handleQuery,value:\"What is Programming?\",children:[/*#__PURE__*/_jsx(\"img\",{src:msgIcon,alt:\"Query\"}),\"What is Programming ?\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"query\",onClick:handleQuery,value:\"How to use an API ?\",children:[/*#__PURE__*/_jsx(\"img\",{src:msgIcon,alt:\"Query\"}),\"How to use an API ?\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"lowerSide\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:home,alt:\"Home\",className:\"listItemsImg\"}),\"Home\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:saved,alt:\"Saved\",className:\"listItemsImg\"}),\"Saved\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listItems\",children:[/*#__PURE__*/_jsx(\"img\",{src:rocket,alt:\"Upgrade\",className:\"listItemsImg\"}),\"Upgrade to Pro\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chats\",children:[messages.map(function(message,i){return/*#__PURE__*/_jsxs(\"div\",{className:message.isBot?\"chat bot\":\"chat\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"chatImg\",src:message.isBot?gptImgLogo:userIcon,alt:\"\"}),/*#__PURE__*/_jsx(\"p\",{className:\"txt\",children:message.text})]},i);}),/*#__PURE__*/_jsx(\"div\",{ref:msgEnd})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatFooter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inp\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Send a message\",value:input,onKeyDown:handleEnter,onChange:function onChange(e){setInput(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"send\",onClick:handleSend,children:/*#__PURE__*/_jsx(\"img\",{src:sendBtn,alt:\"Send\"})})]}),/*#__PURE__*/_jsx(\"p\",{children:\" This is just clone of the chatGPT using react html css and OpenAPI\"})]})]})]});}export default App;","map":{"version":3,"names":["gptLogo","addBtn","msgIcon","home","saved","rocket","sendBtn","userIcon","gptImgLogo","sendMsgToOpenAI","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","App","msgEnd","_useState","_useState2","_slicedToArray","input","setInput","_useState3","text","isBot","_useState4","messages","setMessages","current","scrollIntoView","handleSend","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","concat","_toConsumableArray","sent","stop","apply","arguments","handleEnter","_ref2","_callee2","e","_callee2$","_context2","key","_x","handleQuery","_ref3","_callee3","_callee3$","_context3","target","value","_x2","className","children","src","alt","onClick","window","location","reload","map","message","i","ref","type","placeholder","onKeyDown","onChange"],"sources":["/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/src/App.js"],"sourcesContent":["import './App.css';\nimport gptLogo from './assets/chatgpt.svg';\nimport addBtn from './assets/add-30.png';\nimport msgIcon from './assets/message.svg';\nimport home from './assets/home.svg';\nimport saved from './assets/bookmark.svg';\nimport rocket from './assets/rocket.svg';\nimport sendBtn from './assets/send.svg';\nimport userIcon from './assets/user-icon.png';\nimport gptImgLogo from './assets/chatgptLogo.svg';\nimport { sendMsgToOpenAI } from './openai';\nimport { useEffect, useRef, useState } from 'react';\n\nfunction App() {\n    const msgEnd = useRef(null);\n       \n     const [input, setInput] = useState(\"\");\n     const [messages, setMessages ] = useState([\n         {\n          text: \"This is just clone of the chatGPT using react html css and OpenAPI\",\n          isBot: true,\n         }\n    ]);\n\n\n    useEffect(()=>{\n      msgEnd.current.scrollIntoView();\n    }, [messages])\n\n     const handleSend = async () => {\n        const text = input;\n        setInput('');\n        setMessages([\n          ...messages,\n          { text, isBot:false }\n        ])\n         const res = await sendMsgToOpenAI(text);\n         setMessages([\n          ...messages,\n          { text, isBot: false},\n          {text : res, isBot: true}\n        ]);\n     }\n\n     const handleEnter = async(e) => {\n      if(e.key === 'Enter') await handleSend();\n     }\n\n     const handleQuery = async (e) => {\n       const text = e.target.value;\n       setInput('');\n       setMessages([\n         ...messages,\n         { text, isBot:false }\n       ])\n        const res = await sendMsgToOpenAI(text);\n        setMessages([\n         ...messages,\n         { text, isBot: false},\n         {text : res, isBot: true}\n       ]);\n     }\n\n  return (\n    <div className=\"App\">\n      <div className=\"sideBar\">\n        <div className=\"upperSide\">\n            <div className=\"upperSideTop\"><img src={gptLogo} alt=\"Logo\" className=\"logo\" /><span className=\"brand\">ChatGPT</span></div>\n            <button className=\"midBtn\" onClick={()=>{window.location.reload()}}><img src={addBtn} alt=\"new chat\" className=\"addBtn\" />New Chat</button>\n            <div className=\"upperSideBottom\">\n              <button className=\"query\" onClick={handleQuery} value={\"What is Programming?\"}><img src={msgIcon} alt=\"Query\" />What is Programming ?</button>\n              <button className=\"query\" onClick={handleQuery} value={\"How to use an API ?\"}><img src={msgIcon} alt=\"Query\" />How to use an API ?</button>\n            </div>\n        </div>\n        <div className=\"lowerSide\">\n            <div className=\"listItems\"><img src={home} alt=\"Home\" className=\"listItemsImg\" />Home</div>\n            <div className=\"listItems\"><img src={saved} alt=\"Saved\" className=\"listItemsImg\" />Saved</div>\n            <div className=\"listItems\"><img src={rocket} alt=\"Upgrade\" className=\"listItemsImg\" />Upgrade to Pro</div>\n        </div>\n      </div>\n      <div className=\"main\">\n        <div className=\"chats\">\n         {messages.map((message, i) => \n               <div key={i} className={ message.isBot?\"chat bot\":\"chat\"}>\n                  <img className='chatImg' src={message.isBot?gptImgLogo:userIcon} alt=\"\" /><p className=\"txt\">{ message.text }</p>\n              </div>\n         )}\n         <div ref={msgEnd}/>\n        </div>\n        <div className=\"chatFooter\">\n          <div className=\"inp\">\n            <input type=\"text\" placeholder='Send a message' value={input} onKeyDown={handleEnter} onChange={(e)=>{setInput(e.target.value)}}/><button className=\"send\" onClick={handleSend}><img src={sendBtn} alt=\"Send\" /></button>\n          </div>\n          <p> This is just clone of the chatGPT using react html css and OpenAPI</p>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}