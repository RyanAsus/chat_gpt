{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionStreamingRunner = void 0;\nconst ChatCompletionStream_1 = require(\"./ChatCompletionStream.js\");\nclass ChatCompletionStreamingRunner extends ChatCompletionStream_1.ChatCompletionStream {\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n}\nexports.ChatCompletionStreamingRunner = ChatCompletionStreamingRunner;","map":{"version":3,"names":["ChatCompletionStream_1","require","ChatCompletionStreamingRunner","ChatCompletionStream","fromReadableStream","stream","runner","_run","_fromReadableStream","runFunctions","completions","params","options","_runFunctions","exports"],"sources":["/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/openai/src/lib/ChatCompletionStreamingRunner.ts"],"sourcesContent":["import * as Core from \"../core\";\nimport {\n  Completions,\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParamsStreaming,\n} from \"../resources/chat/completions\";\nimport { type AbstractChatCompletionRunnerEvents } from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from \"../_shims/index\";\nimport { type BaseFunctionsArgs, type RunnableFunctions } from './RunnableFunction';\nimport { ChatCompletionSnapshot, ChatCompletionStream } from './ChatCompletionStream';\n\nexport interface ChatCompletionStreamEvents extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n}\n\nexport type ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport class ChatCompletionStreamingRunner\n  extends ChatCompletionStream\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  static override fromReadableStream(stream: ReadableStream): ChatCompletionStreamingRunner {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static runFunctions<T extends (string | object)[]>(\n    completions: Completions,\n    params: ChatCompletionStreamingFunctionRunnerParams<T>,\n    options?: Core.RequestOptions & { maxChatCompletions?: number },\n  ): ChatCompletionStreamingRunner {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n}\n"],"mappings":";;;;;;AASA,MAAAA,sBAAA,GAAAC,OAAA;AAcA,MAAaC,6BACX,SAAQF,sBAAA,CAAAG,oBAAoB;EAG5B,OAAgBC,kBAAkBA,CAACC,MAAsB;IACvD,MAAMC,MAAM,GAAG,IAAIJ,6BAA6B,EAAE;IAClDI,MAAM,CAACC,IAAI,CAAC,MAAMD,MAAM,CAACE,mBAAmB,CAACH,MAAM,CAAC,CAAC;IACrD,OAAOC,MAAM;EACf;EAEA,OAAOG,YAAYA,CACjBC,WAAwB,EACxBC,MAAsD,EACtDC,OAA+D;IAE/D,MAAMN,MAAM,GAAG,IAAIJ,6BAA6B,EAAE;IAClDI,MAAM,CAACC,IAAI,CAAC,MAAMD,MAAM,CAACO,aAAa,CAACH,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC,CAAC;IACrE,OAAON,MAAM;EACf;;AAlBFQ,OAAA,CAAAZ,6BAAA,GAAAA,6BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}