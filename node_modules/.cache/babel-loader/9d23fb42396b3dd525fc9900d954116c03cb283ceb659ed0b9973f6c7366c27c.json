{"ast":null,"code":"const {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst configuration = new Configuration({\n  apiKey: process.env.OPEN_API_KEY\n});\nconst openai = new OpenAIApi(configuration);\nexport async function sendMsgToOpenAI(message) {\n  const chatCompletion = await openai.createCompletion({\n    model: 'text-davinci-003',\n    prompt: message,\n    temperature: 0.7,\n    max_tokens: 256,\n    top_p: 1,\n    frequency_penalty: 0,\n    presence_penalty: 0\n  });\n  console.log(chatCompletion.choices[0].message);\n}","map":{"version":3,"names":["Configuration","OpenAIApi","require","configuration","apiKey","process","env","OPEN_API_KEY","openai","sendMsgToOpenAI","message","chatCompletion","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","console","log","choices"],"sources":["/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/src/openai.js"],"sourcesContent":["const { Configuration, OpenAIApi} = require('openai');\nconst configuration = new Configuration({apiKey:process.env.OPEN_API_KEY});\nconst openai = new OpenAIApi(configuration);\n\nexport async function sendMsgToOpenAI(message) {\n    const chatCompletion = await openai.createCompletion({\n        model: 'text-davinci-003',\n        prompt: message,\n        temperature: 0.7,\n        max_tokens: 256,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0\n    });\n    console.log(chatCompletion.choices[0].message);\n}"],"mappings":"AAAA,MAAM;EAAEA,aAAa;EAAEC;AAAS,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACrD,MAAMC,aAAa,GAAG,IAAIH,aAAa,CAAC;EAACI,MAAM,EAACC,OAAO,CAACC,GAAG,CAACC;AAAY,CAAC,CAAC;AAC1E,MAAMC,MAAM,GAAG,IAAIP,SAAS,CAACE,aAAa,CAAC;AAE3C,OAAO,eAAeM,eAAeA,CAACC,OAAO,EAAE;EAC3C,MAAMC,cAAc,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;IACjDC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAEJ,OAAO;IACfK,WAAW,EAAE,GAAG;IAChBC,UAAU,EAAE,GAAG;IACfC,KAAK,EAAE,CAAC;IACRC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACV,cAAc,CAACW,OAAO,CAAC,CAAC,CAAC,CAACZ,OAAO,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}