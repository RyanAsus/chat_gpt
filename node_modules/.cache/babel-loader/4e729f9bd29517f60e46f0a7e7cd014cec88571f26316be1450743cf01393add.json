{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionRunner = void 0;\nconst AbstractChatCompletionRunner_1 = require(\"./AbstractChatCompletionRunner.js\");\nclass ChatCompletionRunner extends AbstractChatCompletionRunner_1.AbstractChatCompletionRunner {\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n  _addMessage(message) {\n    super._addMessage(message);\n    if (message.role === 'assistant' && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\nexports.ChatCompletionRunner = ChatCompletionRunner;","map":{"version":3,"names":["AbstractChatCompletionRunner_1","require","ChatCompletionRunner","AbstractChatCompletionRunner","runFunctions","completions","params","options","runner","_run","_runFunctions","_addMessage","message","role","content","_emit","exports"],"sources":["/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"sourcesContent":["import * as Core from \"../core\";\nimport {\n  type Completions,\n  type ChatCompletionMessage,\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from \"../resources/chat/completions\";\nimport { type RunnableFunctions, type BaseFunctionsArgs } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n} from './AbstractChatCompletionRunner';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner<ChatCompletionRunnerEvents> {\n  static runFunctions(\n    completions: Completions,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: Core.RequestOptions & { maxChatCompletions?: number },\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n\n  override _addMessage(message: ChatCompletionMessage | ChatCompletionMessageParam) {\n    super._addMessage(message);\n    if (message.role === 'assistant' && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\n"],"mappings":";;;;;;AAQA,MAAAA,8BAAA,GAAAC,OAAA;AAgBA,MAAaC,oBAAqB,SAAQF,8BAAA,CAAAG,4BAAwD;EAChG,OAAOC,YAAYA,CACjBC,WAAwB,EACxBC,MAAiD,EACjDC,OAA+D;IAE/D,MAAMC,MAAM,GAAG,IAAIN,oBAAoB,EAAE;IACzCM,MAAM,CAACC,IAAI,CAAC,MAAMD,MAAM,CAACE,aAAa,CAACL,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC,CAAC;IACrE,OAAOC,MAAM;EACf;EAESG,WAAWA,CAACC,OAA2D;IAC9E,KAAK,CAACD,WAAW,CAACC,OAAO,CAAC;IAC1B,IAAIA,OAAO,CAACC,IAAI,KAAK,WAAW,IAAID,OAAO,CAACE,OAAO,EAAE;MACnD,IAAI,CAACC,KAAK,CAAC,SAAS,EAAEH,OAAO,CAACE,OAAO,CAAC;;EAE1C;;AAhBFE,OAAA,CAAAd,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}