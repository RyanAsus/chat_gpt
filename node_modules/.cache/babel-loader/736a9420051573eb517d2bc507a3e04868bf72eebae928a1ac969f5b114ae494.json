{"ast":null,"code":"const {\n  Configuration,\n  OpenAIApi\n} = require('openai');\nconst configuration = new Configuration({\n  apikey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nexport async function sendMsgToOpenAI(message) {\n  const res = await openai.createCompletion({\n    model: 'text-davinci-003',\n    prompt: message,\n    temperature: 0.7,\n    max_tokens: 256,\n    top_p: 1,\n    frequency_penalty: 0,\n    presence_penalty: 0 // It should be \"presence_penalty,\" not \"presense_penalty\"\n  });\n\n  return res.data.choices[0].text;\n}","map":{"version":3,"names":["Configuration","OpenAIApi","require","configuration","apikey","openai","sendMsgToOpenAI","message","res","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","data","choices","text"],"sources":["/Users/ranjithsreekaranuradhagopinath/Desktop/Projects/chatgpt_clone/clone/src/openai.js"],"sourcesContent":["const { Configuration, OpenAIApi } = require('openai');\n\nconst configuration = new Configuration({ apikey: \"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\" });\nconst openai = new OpenAIApi(configuration);\n\nexport async function sendMsgToOpenAI(message) {\n    const res = await openai.createCompletion({\n        model: 'text-davinci-003',\n        prompt: message,\n        temperature: 0.7,\n        max_tokens: 256,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0  // It should be \"presence_penalty,\" not \"presense_penalty\"\n    });\n    return res.data.choices[0].text;\n}\n"],"mappings":"AAAA,MAAM;EAAEA,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEtD,MAAMC,aAAa,GAAG,IAAIH,aAAa,CAAC;EAAEI,MAAM,EAAE;AAAsD,CAAC,CAAC;AAC1G,MAAMC,MAAM,GAAG,IAAIJ,SAAS,CAACE,aAAa,CAAC;AAE3C,OAAO,eAAeG,eAAeA,CAACC,OAAO,EAAE;EAC3C,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,gBAAgB,CAAC;IACtCC,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAEJ,OAAO;IACfK,WAAW,EAAE,GAAG;IAChBC,UAAU,EAAE,GAAG;IACfC,KAAK,EAAE,CAAC;IACRC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE,CAAC,CAAE;EACzB,CAAC,CAAC;;EACF,OAAOR,GAAG,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}